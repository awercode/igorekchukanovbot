from aiohttp import Payload
from vkbottle.bot import Bot, Message, rules
from vkbottle import GroupEventType, GroupTypes, Keyboard, KeyboardButtonColor, Text, VKAPIError, TemplateElement, template_gen, ShowSnackbarEvent, Callback
from vkbottle.dispatch.rules.base import CommandRule
import random

photos_list = [
    "photo-203890312_457239017", "photo-203890312_457239018", "photo-203890312_457239019", "photo-203890312_457239020",
    "photo-203890312_457239021", "photo-203890312_457239022", "photo-203890312_457239023", "photo-203890312_457239024",
    "photo-203890312_457239025", "photo-203890312_457239026", "photo-203890312_457239027", "photo-203890312_457239028",
    "photo-203890312_457239050", "photo-203890312_457239051", "photo-203890312_457239054", "photo-203890312_457239058",
    "photo-203890312_457239059", "photo-203890312_457239068", "photo-203890312_457239069", "photo-203890312_457239070",
    "photo-203890312_457239071", "photo-203890312_457239072", "photo-203890312_457239073", "photo-203890312_457239074",
    "photo-203890312_457239075", "photo-203890312_457239076", "photo-203890312_457239077", "photo-203890312_457239078",
    "photo-203890312_457239079", "photo-203890312_457239080", "photo-203890312_457239081", "photo-203890312_457239082",
    "photo-203890312_457239083", "photo-203890312_457239084", "video-203890312_456239017", "video-203890312_456239021"
]

messages_list = [
    "Ayuwoki hehee!", "–∞–∞–∞ —ç—Ç—à –∂–µ —á—É–∫–∞–Ω–æ–≤ –∞—Ñ–∏–≥–µ—Ç—å –∫—Ä—É—Ç–æ", "—á—Ç–æ –∑–∞ —Ö–∫–π–Ω—é —è —Ç—É—Ç –ø–∏—à—É", "IGREG",
    "–º–æ–∂–µ—Ç –±—ã—Ç—å –¥–æ–±–∞–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —Å—Ä—Ä—å—à–µ—è —ç–µ—â–µ", "NAGIEV", "–°–¥–µ–ª–∞–π —Å–∫—Ä–∏–Ω—à–æ—Ç\n–û—Ç–ø—Ä–∞–≤—å –±–æ—Ç—É (–Ω –µ—á—É–∫–∞–Ω–æ–≤—É)",
    "–ü–æ–∫–∞–∑–∞—Ç—å —á—É–∫–∞–Ω–æ–≤–∞", "–∏ —Ç—ã –º–æ–π –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø—Ä–µ–¥–∞—Ç–µ–ª—å –∫–æ—Ç–æ—Ä–æ–≥–æ —è –Ω–µ –ø—Ä–æ—â—É", "–≥–æ–≤–æ—Ä–∏—Ç –∏–≥–æ—Ä—å —á.",
    "–Ω–æ–≤—ã–π —Ö–∏—Ç –∏–≥–æ—Ä—è —á—É–∫–∞–Ω–æ–≤–∞", "–º–µ–∂–¥—É –Ω–∞–º–∏ –ø—Ä–æ–≤–æ–î–ê", "–∞—Ö–∞—Ö–∞ —á—É–∫–∞–Ω–æ–≤ —Å–º–µ—à–Ω–æ–π", "—Ä–∂–∞–∫–∞ —Å–º–µ—è–∫–∞",
    "Good morning Elena ANATOLEVNA", "—Å–∫–æ—Ç–∏–Ω–∞", "–∫—Ç–æ –æ—Å–∫–æ—Ä–±–ª—è–µ—Ç –∞–Ω–∞—Ç–æ–ª—å–µ–≤–Ω—É —Ç–æ—Ç —Å–∫–æ—Ç–∏–Ω–∞",
    "ANATOLEVNA SMESHNAYA"]

names_list = ["–µ–ª–µ–Ω–∞ –∞–Ω–∞—Ç–æ–ª—å–µ–≤–Ω–∞", "–∫–∞—Ä–∏–Ω–µ –µ–≥–∏—à–µ–≤–Ω–∞", "–¥–º–∏—Ç—Ä–∏–π –Ω–∞–≥–∏–µ–≤"]

bot = Bot(token="vk1.a._uzVQTrqQDnRtuhOPbWuPdx7H5aIJOioMltY0FKrGbK_hS7RTL0EKFtHQoE87Z3VjZ8tNGYKlW5rFy4oys7UqSqik21rbyjCsKiuytnYj1Sn0ywd_Q5HGwEg7joqiZH8_qYE6csEUcxscA_0Dna8ZEz3wqXg0_6ODUK91Kkl6G_FxzVU8M89555G3Xucwdk8")
bot.labeler.vbml_ignore_case = True

bot.labeler.message_view.replace_mention = True

@bot.on.message(text="–ú–µ–Ω—é")
async def menu_handler(message: Message):
    MenuKeyboard = (
        Keyboard(one_time=False, inline=False)
        .add(Text("–ü–æ–∫–∞–∑–∞—Ç—å —á—É–∫–∞–Ω–æ–≤–∞"), color=KeyboardButtonColor.NEGATIVE)
        .row()
        .add(Text("–ú–∞–≥–∞–∑–∏–Ω"), color=KeyboardButtonColor.PRIMARY)
        .add(Text("–ü–æ–º–æ—â—å"), color=KeyboardButtonColor.SECONDARY)
        .get_json()
    )
    await message.answer("–º–µ–Ω—é –±–æ—Ç–∞ —á—É–∫–∞–Ω–æ–≤ –±–æ—Ç", attachment=random.choice(photos_list), keyboard=MenuKeyboard)

@bot.on.message(text="–ü–æ–º–æ—â—å")
async def pomogimne(message: Message):
    await message.answer(
        "üí°–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:\n\
        ü§∞–ü–æ–∫–∞–∑–∞—Ç—å —á—É–∫–∞–Ω–æ–≤–∞ ‚Äì –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —á—É–∫–∞–Ω–æ–≤–∞\n\
        üìå–ú–µ–Ω—é ‚Äì –æ–±–Ω–æ–≤–ª—è–µ—Ç –º–µ–Ω—é\n\
        ‚ö†Ô∏è–°—Ç–∏–∫–µ—Ä —ç—Ç–æ –≤–∞–∂–Ω–æ ‚Äì –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–ª—å—é –æ–ª—é –≤–∞–∂–Ω—É—é\n\
        üí™–õ—é–±–æ–π –¥—Ä—É–≥–æ–π —Å—Ç–∏–∫–µ—Ä ‚Äì –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –µ–≥–æ id (–º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω–æ, –Ω–æ –≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ —Ç–æ–ª—å–∫–æ –º–Ω–µ)\n\
        üõí–ú–∞–≥–∞–∑–∏–Ω ‚Äì –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–µ–Ω—é –º–∞–≥–∞–∑–∏–Ω–∞, –≥–¥–µ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –Ω–∞–≥–∏–µ–≤–∞, –¥–∏–≤–∞–Ω –∏ –æ—Å—Ç–∞–ª—å–Ω–æ–µ –ø–æ—Ç–æ–º\n\
        üòÆ—Å–∫–∏–Ω—å —Å—Ç—Ä–∞—à–Ω—É—é —Ñ–æ—Ç–∫—É —á—É–∫–∞–Ω–æ–≤–∞ ‚Äì —Å–∫–∏–¥—ã–≤–∞–µ—Ç —Å—Ç—Ä–∞—à–Ω—É—é —Ñ–æ—Ç–∫ —É—á—É–∫–∞–Ω–æ–≤–∞"
    )

@bot.on.message(text="–ü–æ–∫–∞–∑–∞—Ç—å —á—É–∫–∞–Ω–æ–≤–∞")
async def pokazat_handler(message: Message):
    if message.peer_id == 2000000002:
        colvosoobsheniyspam = random.randint(0, 300)
        for i in range(colvosoobsheniyspam):
            await message.answer(random.choice(messages_list), attachment=random.choice(photos_list))
        await message.answer(f"üí°–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {colvosoobsheniyspam}")
    else:
        await message.answer(random.choice(messages_list), attachment=random.choice(photos_list))
    print(message.peer_id)

@bot.on.message(attachment="sticker")
async def sticker_handler(message: Message):
    if message.attachments[0].sticker.sticker_id == 62951:
        await message.answer(attachment="photo-203890312_457239059")
    else:
        await message.answer(f"‚ÑπÔ∏èID —Å—Ç–∏–∫–µ—Ä–∞: {message.attachments[0].sticker.sticker_id}")

#@bot.on.message(sticker=62951)
#async def etovajno(message: Message):
    #await message.answer(attachment="photo-203890312_457239059")

@bot.on.message(text=messages_list)
async def povtoryat_handler(message: Message):
    await message.answer("–ø–∏–∑–¥–∞ " + random.choice(names_list) + " —Ç—ã —á–µ –∑–∞ –º–Ω–æ–π –ø–æ–≤—Ç–æ—Ä—è–µ—à—å")

@bot.on.message(text=["–º–∞–≥–∞–∑–∏–Ω", "–Ω–∞–≥–∏–µ–≤"])
async def nagievhandler(message: Message):
    #keyboardnagiev = Keyboard().add(Text("–∫—É–ø–∏—Ç—å –Ω–∞–≥–∏–µ–≤–∞ –æ–Ω–ª–∞–π–Ω"), color=KeyboardButtonColor.POSITIVE)
    keyboardnagiev = (
        Keyboard(one_time=False)
        .add(Callback("–ö—É–ø–∏—Ç—å", payload={"cmd": "buynagiev"}))
        .get_json()
    )
    #keyboarddivan = Keyboard().add(Text("–∫—É–ø–∏—Ç—å –¥–∏–≤–∞–Ω"), color=KeyboardButtonColor.NEGATIVE)
    keyboarddivan = (
        Keyboard(one_time=False)
        .add(Callback("–ö—É–ø–∏—Ç—å", payload={"cmd": "buydivan"}))
        .get_json()
    )
    magazinkarusel = template_gen(
        TemplateElement(
            "–î–º–∏—Ç—Ä–∏–π –ù–∞–≥–∏–µ–≤",
            "–¥—è–¥—è –Ω–∞–≥–∏–µ–≤",
            "-203890312_457239056",
            keyboardnagiev
        ),
        TemplateElement(
            "–î–∏–≤–∞–Ω",
            "–∫—É–ø–∏—Ç—å –¥–∏–≤–∞–Ω",
            "-203890312_457239057",
            keyboarddivan
        )
    )
    
    await message.answer("—É–Ω–∏–∫–∞–ª—å–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω –ø—è—Ç–µ—Ä–æ—á–∫–∞ —á—É–∫–∞–Ω–æ–≤ –±–æ—Ç –ø–ª–∞—Ç–∏—á–µ–≥ –Ω–∞–≥–∏–µ–≤ –∑–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –≤—Å–µ–î–ò–í–ê–ù", template=magazinkarusel)

@bot.on.message(text="—Å–∫–∏–Ω—å —Å—Ç—Ä–∞—à–Ω—É—é —Ñ–æ—Ç–∫—É —á—É–∫–∞–Ω–æ–≤–∞")
async def strashnochukanov(message: Message):
    await message.answer(attachment="photo-203890312_457239076")

@bot.on.raw_event(GroupEventType.MESSAGE_EVENT, dataclass=GroupTypes.MessageEvent)
async def handle_message_event(event: GroupTypes.MessageEvent):
    print(event.object.payload)
    if event.object.payload == {'cmd': 'buynagiev'}:
        await bot.api.messages.send_message_event_answer(
            event_id=event.object.event_id,
            user_id=event.object.user_id,
            peer_id=event.object.peer_id,
            event_data=ShowSnackbarEvent(text="–í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –Ω–∞–≥–∏–µ–≤–∞!").json(),
        )
        await bot.api.messages.send(
            peer_id=event.object.peer_id, message="–£–†–ê –ü–û–ó–î–†–ê–í–õ–Ø–Æ –í–´ –ö–£–ü–ò–õ–ò –ù–ê–≥–ò–ï–í–ê –û–ù–õ–ê–ô–ù –ü–û–î–ó–î—Ä–ê–í–õ–Ø–Æ –° –ü–û–ö–£–ü–ö–û–ô!!!!!!!11111", random_id=0
        )
    elif event.object.payload == {'cmd': 'buydivan'}:
        await bot.api.messages.send_message_event_answer(
            event_id=event.object.event_id,
            user_id=event.object.user_id,
            peer_id=event.object.peer_id,
            event_data=ShowSnackbarEvent(text="–í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –¥–∏–≤–∞–Ω!").json(),
        )
        users_info = await bot.api.users.get(event.object.user_id)
        await bot.api.messages.send(
            peer_id=event.object.peer_id, message="{} {} –∫—É–ø–∏–ª–∞ –¥–∏–≤–∞–Ω".format(users_info[0].first_name, users_info[0].last_name).lower(), random_id=0
        )

@bot.on.raw_event(GroupEventType.GROUP_JOIN, dataclass=GroupTypes.GroupJoin)
async def group_join_handler(event: GroupTypes.GroupJoin):
    try:
        await bot.api.messages.send(
            peer_id=event.object.user_id, message="–ø–∏–∑–¥–∞ —á—É–∫–∞–Ω–æ —á—É–∫–∞–Ω–æ–≤!", random_id=0
        )
    except VKAPIError[901]:
        pass

bot.run_forever()
